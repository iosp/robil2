
/*
 * RosComm.cpp
 *
 *  Created on: Sunday, 02. February 2014 10:15AM
 *      Author: autogenerated
 */
#include <ros/ros.h>
#include <std_msgs/String.h>
#include "RosComm.h"
#include "../component/ComponentMain.h"
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include "ParameterHandler.h"
RosComm::RosComm(ComponentMain* comp,int argc,char** argv)
	: _inited(init(argc, argv)), _comp(comp)
{
	_sub_TrottleEffort=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"PL_R2U","TrottleEffort","sub"), 10, &RosComm::TrottleEffortCallback,this));
	_sub_SteeringEffort=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"PL_R2U","SteeringEffort","sub"), 10, &RosComm::SteeringEffortCallback,this));
	_sub_JointsEffort=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"PL_R2U","JointsEffort","sub"), 10, &RosComm::JointsEffortCallback,this));

}
RosComm::~RosComm()
{
}
bool RosComm::init(int argc,char** argv){
	ros::init(argc,argv,"PL_R2U_node");
	return true;
}


void RosComm::TrottleEffortCallback(const config::PL_R2U::sub::TrottleEffort::ConstPtr &msg)
{
	_comp->handleTrottleEffort(*msg);
}
	

void RosComm::SteeringEffortCallback(const config::PL_R2U::sub::SteeringEffort::ConstPtr &msg)
{
	_comp->handleSteeringEffort(*msg);
}
	

void RosComm::JointsEffortCallback(const config::PL_R2U::sub::JointsEffort::ConstPtr &msg)
{
	_comp->handleJointsEffort(*msg);
}
	

