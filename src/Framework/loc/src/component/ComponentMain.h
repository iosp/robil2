
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 27. February 2014 12:29PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <ros/ros.h>

#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>

#include <std_msgs/String.h>
#include <tf/tf.h>
#include "ekf_class.h"
#include "noiseless_estimator.h"
#include <boost/thread.hpp>
#include <dynamic_reconfigure/server.h>
#include <loc/configConfig.h>

#include <nav_msgs/Odometry.h>
#include <geometry_msgs/PoseStamped.h>
#include <geometry_msgs/PoseWithCovarianceStamped.h>
#include <sensor_msgs/Imu.h>
#include <sensor_msgs/NavSatFix.h>
#include <diagnostic_msgs/DiagnosticArray.h>
#include <geometry_msgs/TwistStamped.h>

#include <sensor_msgs/Imu.h>
#include <sensor_msgs/NavSatFix.h>

#ifndef HEARTBEAT_FREQUANCY
#define HEARTBEAT_FREQUANCY 2 //Hz
#endif

#ifndef HEARTBEAT_FREQUENCY
#define HEARTBEAT_FREQUENCY 2 //Hz
#endif

using namespace sensor_msgs;
//class ComponentMain;
class ComponentMain {

public:
	ComponentMain(int argc,char** argv);
    virtual ~ComponentMain();
    void handlePositionUpdate(const geometry_msgs::PoseStamped& msg);
    void publishLocation(geometry_msgs::PoseWithCovarianceStamped& msg);
    void publishPerVelocity(geometry_msgs::TwistStamped& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTransform(std::string srcFrame, std::string distFrame);
    void configCallback(loc::configConfig &config, uint32_t level);
    void callback(const ImuConstPtr& imu, const NavSatFixConstPtr& gps, const NavSatFixConstPtr& speed_msg);
    ros::NodeHandle _nh;
private:
    bool _inited;
    loc::configConfig dyn_conf;
    NavSatFix initialGPS;

    ros::Subscriber _sub_PositionUpdate;
    ros::Publisher  _pub_Location;
    ros::Publisher  _pub_PerVelocity;

    bool init(int argc,char** argv);
};
#endif /* COMPONENTMAIN_H_ */
