
/*
 * ComponentMain.h
 *
 *  Created on: Monday, 18. July 2016 09:41AM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
#include <boost/thread.hpp>

class ComponentMain {
	bool _inited;
	  ros::NodeHandle _nh;
	  ros::Publisher _pub_diagnostic;
	  boost::thread_group _maintains;
	  bool init(int argc,char** argv);
	  ros::Subscriber _sub_SensorCamL;
	  ros::Subscriber _sub_SensorCamR;
	  ros::Publisher  _pub_VOPose;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();


	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);
	void heartbeat();
	void handleCAML(const sensor_msgs::Image& msg);
	void handleCAMR(const sensor_msgs::Image& msg)
;

};
#endif /* COMPONENTMAIN_H_ */
