#! /usr/bin/env python

PACKAGE='per'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name       Type      Level Description     Default Min   Max
vis = gen.add_group("Visualization")
vis.add("heightMap",       bool_t,    0,    "Show height map", False)
vis.add("typeMap",       bool_t,    0,    "Show type map", False)
vis.add("resetMap",     bool_t, 0, "reset HeightMap", False)
vis.add("Debug",       bool_t,    0,    "Publish heigh and type maps?", True)
vis.add("map_pub_rate", double_t, 0, "The rate to publish the maps [Hz]", 5.0, 0.1, 20)
h_map = gen.add_group("Height Map")
h_map.add("height_filter", double_t, 0,"Alpha filter value of the heights", 0.9, 0.0, 1.0)
h_map.add("convolution_size", int_t, 0,"convolution size for type calculation", 3, 1, 6)
h_map.add("convolution_type", str_t, 0, "For non linear convolution. Not in use yet!!!", "1,1,1")
h_map.add("obstacle_threshold", double_t, 0, "Obstacle thresholding - 0=everything is a threshold", 0.1, 0, 2)
h_map.add("slope_threshold", double_t, 0, "Slope thresholding - 0=everything is a threshold", 0.18, 0, 4)
h_map.add("acc_filter", double_t, 0, "Threshold of pitch to discard IBEO reading", 0.37, 0, 1)
h_map.add("acc_filter_timeout", double_t, 0, "How long to stop IBEO sensor reading (in sec)", 0.0, 0.0, 1.0)
h_map.add("yaw_dot_filter", double_t, 0, "Threshold of yaw_dot to discard IBEO reading", 0.2, 0, 5)
t_map = gen.add_group("Type Map")
t_map.add("reg_size", int_t, 0, "conv size to search for obs size. ", 2, 0, 9)
t_map.add("min_size", int_t, 0, "minimum number of obstacles. ", 5, 0, 9)
t_map.add("repetitions", int_t, 0, "Minimum number of repetitions", 0, 0, 1000)

exit(gen.generate(PACKAGE, "per", "config"))
