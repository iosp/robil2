
/*
 * RosComm.cpp
 *
 *  Created on: Sunday, 02. February 2014 10:15AM
 *      Author: autogenerated
 */
#include <ros/ros.h>
#include <std_msgs/String.h>
#include "RosComm.h"
#include "../component/ComponentMain.h"
#include <string>       // std::string
#include <iostream>     // std::cout
#include <sstream>
#include "ParameterHandler.h"
RosComm::RosComm(ComponentMain* comp,int argc,char** argv)
	: _inited(init(argc, argv)), _comp(comp)
{
	_sub_Sensor_SICK=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"SE_R2RS","Sensor_SICK","sub"), 10, &RosComm::Sensor_SICKCallback,this));
	_sub_Sensor_IBEO=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"SE_R2RS","Sensor_IBEO","sub"), 10, &RosComm::Sensor_IBEOCallback,this));
	_sub_Sensor_CAM_R=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"SE_R2RS","Sensor_CAM_R","sub"), 10, &RosComm::Sensor_CAM_RCallback,this));
	_sub_Sensor_CAM_L=ros::Subscriber(_nh.subscribe(fetchParam(&_nh,"SE_R2RS","Sensor_CAM_L","sub"), 10, &RosComm::Sensor_CAM_LCallback,this));

}
RosComm::~RosComm()
{
}
bool RosComm::init(int argc,char** argv){
	ros::init(argc,argv,"SE_R2RS_node");
	return true;
}


void RosComm::Sensor_SICKCallback(const config::SE_R2RS::sub::Sensor_SICK::ConstPtr &msg)
{
	_comp->handleSensor_SICK(*msg);
}
	

void RosComm::Sensor_IBEOCallback(const config::SE_R2RS::sub::Sensor_IBEO::ConstPtr &msg)
{
	_comp->handleSensor_IBEO(*msg);
}
	

void RosComm::Sensor_CAM_RCallback(const config::SE_R2RS::sub::Sensor_CAM_R::ConstPtr &msg)
{
	_comp->handleSensor_CAM_R(*msg);
}
	

void RosComm::Sensor_CAM_LCallback(const config::SE_R2RS::sub::Sensor_CAM_L::ConstPtr &msg)
{
	_comp->handleSensor_CAM_L(*msg);
}
	

