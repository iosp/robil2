
/*
 * ComponentMain.h
 *
 *  Created on: Wednesday, 09. April 2014 08:18AM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
#include "IEDSimLogic.h"
#include <cognitao_v2/cognitao_v2.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
	IEDSimLogic * _lg;
	cognitao::bus::RosEventQueue* _events;
	boost::mutex _mt;

public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleCustomIED(const config::IEDSIM::sub::CustomIED& msg);
	void handleLocation(const config::IEDSIM::sub::Location& msg);
	void publishIEDLocation(config::IEDSIM::pub::IEDLocation& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);

	void set_events(cognitao::bus::RosEventQueue* events);
	void rise_taskFinished();
	void rise_taskAborted();
	void rise_taskStarted();
	void rise_taskPaused();
	bool isClosed();
};
#endif /* COMPONENTMAIN_H_ */
