
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 27. February 2014 12:29PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>

#pragma push_macro("cout")
#undef cout
#include <cognitao/io/compiler/Compiler.h>
#include <cognitao/io/parser/xml/XMLParser.h>
#include <cognitao/io/compiler/fsm/FsmBuilder.h>
#include <cognitao/io/compiler/ftt/FttBuilder.h>
#include <cognitao/bus/ros_events_bus.h>
#include <cognitao/events_adapter/FsmEventsAdapter.h>
#include <cognitao/events_adapter/FttEventsAdapter.h>
#pragma pop_macro("cout")

class RosComm;
class MoveBase;
class ComponentMain {
	RosComm* _roscomm;
	MoveBase* _move_base;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleLocalPath(const config::WPD::sub::LocalPath& msg);
	void handleMiniMap(const config::WPD::sub::MiniMap& msg);
	void handleLocation(const config::WPD::sub::Location& msg);
	void publishWPDVelocity(config::WPD::pub::WPDVelocity& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);
};
#endif /* COMPONENTMAIN_H_ */
