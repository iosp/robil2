
/*
 * ComponentMain.h
 *
 *  Created on: Wednesday, 19. February 2014 04:26PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class ComponentMain {
	RosComm* _roscomm;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();

	void publishSensorINS(config::SENSORS::pub::SensorINS& msg);
	void publishSensorGPS(config::SENSORS::pub::SensorGPS& msg);
	void publishSensorCamL(config::SENSORS::pub::SensorCamL& msg);
	void publishSensorCamR(config::SENSORS::pub::SensorCamR& msg);
	void publishSensorWire(config::SENSORS::pub::SensorWire& msg);
	void publishSensorSICK(config::SENSORS::pub::SensorSICK& msg);
	void publishSensorIBEO1(config::SENSORS::pub::SensorIBEO1& msg);
	void publishSensorIBEO2(config::SENSORS::pub::SensorIBEO2& msg);
	void publishSensorIBEO3(config::SENSORS::pub::SensorIBEO3& msg);
	void publishSensorIBEO4(config::SENSORS::pub::SensorIBEO4& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);
};
#endif /* COMPONENTMAIN_H_ */
