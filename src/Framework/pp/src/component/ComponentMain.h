
/*
 * ComponentMain.h
 *
 *  Created on: Thursday, 27. February 2014 12:29PM
 *      Author: autogenerated
 */
#ifndef COMPONENTMAIN_H_
#define COMPONENTMAIN_H_
#include <std_msgs/String.h>
#include <ParameterTypes.h>
#include <tf/tf.h>
class RosComm;
class MoveBase;
namespace decision_making{ class EventQueue; }
class ComponentMain {
	RosComm* _roscomm;
	MoveBase* _move_base;
	decision_making::EventQueue* _events;
	boost::mutex _mt;
public:
	ComponentMain(int argc,char** argv);
	virtual ~ComponentMain();
	void handleGlobalPath(const config::PP::sub::GlobalPath& msg);
	void handleBladePosition(const config::PP::sub::BladePosition& msg);
	void handleMap(const config::PP::sub::Map& msg);
	void handleLocation(const config::PP::sub::Location& msg);
	void publishLocalPath(config::PP::pub::LocalPath& msg);
	void publishTransform(const tf::Transform& _tf, std::string srcFrame, std::string distFrame);
	tf::StampedTransform getLastTrasform(std::string srcFrame, std::string distFrame);
	void publishDiagnostic(const diagnostic_msgs::DiagnosticStatus& _report);
	void publishDiagnostic(const std_msgs::Header& header, const diagnostic_msgs::DiagnosticStatus& _report);

	void set_events(decision_making::EventQueue* events);
	void rise_taskFinished();
	void rise_taskStarted();
	void rise_taskPaused();

	void cancel_navigation();
	void pause_navigation();
	void resume_navigation();
};
#endif /* COMPONENTMAIN_H_ */
